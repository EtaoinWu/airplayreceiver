name: Build

on:
  push:
    branches: [ ghaction ]

jobs:

  build:
    name: Build
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]

    steps:
    - name: Checkout code
      uses: actions/checkout@v2

    - name: Set up .NET Core
      uses: actions/setup-dotnet@v1
      with:
        dotnet-version: '6.0.x'

    - name: Build fdk-aac (Linux)
      if: matrix.os == 'ubuntu-latest'
      run: |
        sudo apt-get install build-essential autoconf automake libtool
        git clone https://github.com/mstorsjo/fdk-aac.git
        cd fdk-aac
        autoreconf -fi
        ./configure
        make

    - name: Build fdk-aac (macOS)
      if: matrix.os == 'macos-latest'
      run: |
        brew install autoconf automake libtool
        git clone https://github.com/mstorsjo/fdk-aac.git
        cd fdk-aac
        autoreconf -fi
        ./configure
        make

    - name: Set up MSYS (Windows)
      if: matrix.os == 'windows-latest'
      uses: msys2/setup-msys2@v2
      with:
        update: true
        install: >-
          base-devel
          git
          wget
          autoconf
          automake
          libtool
          mingw-w64-x86_64-toolchain

    - name: Build fdk-aac (Windows)
      if: matrix.os == 'windows-latest'
      shell: msys2 {0}
      run: |
        git clone https://github.com/mstorsjo/fdk-aac.git
        cd fdk-aac
        autoreconf -fi
        ./configure
        make

    - name: Build ALAC (Linux/macOS)
      if: matrix.os != 'windows-latest'
      run: |
        git clone https://github.com/mikebrady/alac.git
        cd alac
        wget https://github.com/GiteKat/LibALAC/tree/master/LibALAC -P codec
        cp ../makefile.original.new makefile.original
        cp ../makefile.am.new makefile.am
        autoreconf -fi
        ./configure
        make

    - name: Build ALAC (Windows)
      if: matrix.os == 'windows-latest'
      shell: msys2 {0}
      run: |
        git clone https://github.com/mikebrady/alac.git
        cd alac
        wget https://github.com/GiteKat/LibALAC/tree/master/LibALAC -P codec
        cp ../makefile.original.new makefile.original
        cp ../makefile.am.new makefile.am
        autoreconf -fi
        ./configure
        make

    - name: Build AirPlay (Debug)
      run: |
        dotnet build AirPlay/AirPlay.csproj --configuration Debug
  
    - name: Build AirPlay (Release)
      run: |
        dotnet build AirPlay/AirPlay.csproj --configuration Release

    # - name: Bundle artifacts
    #   run: |
    #     mkdir -p artifacts/debug
    #     mkdir -p artifacts/release
    #     cp AirPlay/bin/Debug/netcoreapp2.2/* artifacts/debug/
    #     cp AirPlay/bin/Release/netcoreapp2.2/* artifacts/release/
    #     cp fdk-aac/.libs/* artifacts/
    #     cp alac/.libs/* artifacts/

    - name: Upload artifacts
      uses: actions/upload-artifact@v2
      with:
        name: airplay-${{ matrix.os }}
        path: ./
